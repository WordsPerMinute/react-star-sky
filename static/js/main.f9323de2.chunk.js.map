{"version":3,"sources":["../../src/index.js","../../src/w3color.js","App.js","index.js"],"names":["getRGBObject","input","defaultCol","output","r","g","b","rgbCol","w3color","this","color","arr","colornames","colorhexs","c","w3trim","x","y","a","isNaN","typ","arrlength","opacity","red","green","blue","hue","sat","lightness","whiteness","blackness","cyan","magenta","yellow","black","ncol","valid","i","Number","Math","parseInt","rgb","hslToRgb","hwbToRgb","h","letter","percent","white","ncolToRgb","m","cmykToRgb","ncs","chroma","bc","black1","chroma1","red1","factor1","blue1","green1","red2","green2","blue2","factor2","max","grey","ncsToRgb","match","getColorArr","isHex","colorObject","toColorObject","elmnt","hsl","min","maxcolor","l","s","rgbToHsl","hwb","w","bl","rgbToHwb","cmyk","k","rgbToCmyk","hueToNcol","hueToRgb","t1","light","t2","rgbArr","tot","hex","n","indexOf","toRgbString","toRgbaString","toHwbString","toHwbStringDecimal","toHwbaString","toHslString","toHslStringDecimal","toHslaString","toCmykString","toCmykStringDecimal","toNcolString","toNcolStringDecimal","toNcolaString","toName","toHexString","toHex","toRgb","toHsl","toHwb","toCmyk","toNcol","isDark","saturate","desaturate","lighter","darker","attachValues","window","StarSky","p","cnv","colorProp","starSky","bgCol","fps","console","resize","count","rbCol","render","setColor","rainbow","brightness","size","brightnessOff","brightnessIncrement","React","alpha","data_url","componentDidMount","canvasRef","setState","componentWillUnmount","applyStyle","overflow","position","props","width","height","top","left","zIndex","className","ref","style","Component","App","debugFPS","pageBackground","frameRate","starColor","backgroundColor","margin","marginTop","border","borderRadius","padding","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f9323de2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport w3color from './w3color'\n\nimport p5 from \"p5\"\n\n/* props:\n  - debugFPS (default = false)\n  - frameRate (int, default = 60fps)\n  - style (any styling applying to the wrapper)\n  - className (to be applied to the wrapper div)\n  - starColor ('rainbow', 'white/red/green/etc'[w3color], [r, g, b])\n  - skyColor ('white/red/green/etc'[w3color], [r, g, b], default = [0, 0, 0])\n*/\n\nexport default class StarSky extends Component {\n  constructor(props) {\n    super(props)\n\n    this.canvasRef = React.createRef()\n\n    this.state = {\n      alpha: null,\n      resize: false,\n      data_url: null\n    }\n  }\n\n  Sketch = (p) => {\n\n    let colorProp\n    let countProp\n\n    let nebula\n    let starSky\n    let bgCol\n\n    p.setup = () => {\n      let cnv = p.createCanvas(this.canvasRef.current.offsetWidth, this.canvasRef.current.offsetHeight, p.P2D)\n\n      // Set the canvas as the background of the div\n      cnv.style('position', 'absolute')\n      cnv.style('top', 0)\n      cnv.style('left', 0)\n      cnv.style('z-index', -99)\n\n      p.frameRate(this.props.frameRate || 60)\n\n      // countProp = this.props.starCount\n      colorProp = this.props.starColor\n\n      // nebula = new Nebula()\n      starSky = new StarSky(this.props.starCount)\n\n      bgCol = getRGBObject(this.props.backgroundColor)\n    }\n\n    p.draw = () => {\n      p.background(bgCol.r, bgCol.g, bgCol.b)\n      colorProp = this.props.starColor\n\n      if (this.state.resize)\n        p.resize()\n\n      // nebula.render(this.state.alpha)\n\n      starSky.render()\n\n      if (this.props.debugFPS) {\n        let fps = p.int(p._frameRate)\n        p.fill(255)\n        p.text(fps, 0, 10)\n      }\n\n    }\n\n    p.resize = () => {\n      p.resizeCanvas(this.canvasRef.current.offsetWidth, this.canvasRef.current.offsetHeight)\n\n      console.log('Resize', this.canvasRef.current.offsetWidth, this.canvasRef.current.offsetHeight)\n\n      p.starSky = null\n      p.starSky = new StarSky(this.props.starCount)\n\n      this.setState({ resize: false })\n    }\n\n    p.windowResized = () => {\n      p.resize()\n    }\n\n    let StarSky = class {\n      constructor(count) {\n        count = count || 250\n        this.count = p.int(p.random(count - 0.05 * count, count + 0.05 * count))\n\n        this.rainbow = []\n\n        this.brightness = []\n        this.x = []\n        this.y = []\n        this.brightnessOff = []\n        this.brightnessIncrement = []\n        this.size = []\n\n        console.log('To', p.width, p.height)\n\n        for (let i = 0; i < this.count; i++) {\n          this.brightness.push(p.int(p.random(0, 255)))\n          this.brightnessOff.push(p.random(0.01, 0.1))\n          this.brightnessIncrement.push(p.random(0.01, 0.02))\n          this.size.push(p.random(1, 3))\n          this.x.push(p.random(0, p.width))\n          this.y.push(p.random(0, p.height))\n\n          if (colorProp === 'rainbow') {\n            let rbCol = []\n            for (let i = 0; i < 3; i++)\n              rbCol.push(parseInt(p.random(0, 256)))\n            this.rainbow.push(rbCol)\n          }\n        }\n      }\n\n      render() {\n        p.noStroke()\n\n        // Set Star Color\n        let setColor = getRGBObject(colorProp, [255, 255, 255])\n\n        // Draw Each Star\n        for (let i = 0; i < this.count; i++) {\n\n          // Change to individual star color\n          if (colorProp === 'rainbow')\n            setColor = { r: this.rainbow[i][0], g: this.rainbow[i][1], b: this.rainbow[i][2] }\n\n          // Fill Star Colour\n          p.fill(setColor.r, setColor.g, setColor.b, this.brightness[i])    // When colorProp isnt set -> white\n\n          // Draw Star\n          p.ellipse(this.x[i], this.y[i], this.size[i], this.size[i])\n\n          // Update Brightness of individual star\n          this.brightness[i] = p.max(0, p.min(255, p.noise(this.brightnessOff[i]) * 255))\n          this.brightnessOff[i] += this.brightnessIncrement[i]\n        }\n      }\n    }\n\n    // let Nebula = class {\n    //   render(alpha) {\n    //     if (alpha !== null) {\n    //       if (alpha.length > 0) {\n    //         for (let i = 0; i < p.width / 10; i++) {\n    //           if (alpha[i]) {\n    //             for (let j = 0; j < p.height / 10; j++) {\n    //               p.fill(alpha[i][j], 0, 0)\n    //               p.ellipse(i * 10, j * 10, 20, 20)\n    //             }\n    //           }\n    //         }\n    //       }\n    //     }\n    //   }\n    // }\n  }\n\n  componentDidMount() {\n    this.canvas = new p5(this.Sketch, this.canvasRef.current)\n\n    this.canvasRef.current.addEventListener('resize', this.setState({ resize: true }))\n  }\n\n  componentWillUnmount() {\n    this.canvasRef.current.removeEventListener('resize', this.setState({ resize: true }))\n  }\n\n  render() {\n\n    let applyStyle = {\n      overflow: 'clip',\n      position: 'relative',\n      ...this.props.style,\n    }\n    if (this.props.pageBackground) {\n      applyStyle = {\n        ...applyStyle,\n        width: '100vw',\n        height: '100vh',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        zIndex: -100\n      }\n    }\n\n    return (\n      <div\n        className={this.props.className}\n        ref={this.canvasRef}\n        style={applyStyle}\n      >\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\n\nfunction getRGBObject(input, defaultCol = [0, 0, 0]) {\n  let output = { r: defaultCol[0], g: defaultCol[1], b: defaultCol[2] }\n\n  if (input?.length === 3)  // When colorProp is an rgb array\n    output = { r: input[0], g: input[1], b: input[2] }\n\n  if (typeof input === 'string') {  // When colorProp is a string containing the color name of a w3color\n    let rgbCol = w3color(input).toRgb()\n    output = { r: rgbCol.r, g: rgbCol.g, b: rgbCol.b }\n  }\n\n  return output\n}","/* w3color.js ver.1.18 by w3schools.com (Do not remove this line)*/\r\n(function () {\r\n    function w3color(color, elmnt) {\r\n        if (!(this instanceof w3color)) { return new w3color(color, elmnt); }\r\n        if (typeof color == \"object\") { return color; }\r\n        this.attachValues(toColorObject(color));\r\n        if (elmnt) { elmnt.style.backgroundColor = this.toRgbString(); }\r\n    }\r\n    w3color.prototype = {\r\n        toRgbString: function () {\r\n            return \"rgb(\" + this.red + \", \" + this.green + \", \" + this.blue + \")\";\r\n        },\r\n        toRgbaString: function () {\r\n            return \"rgba(\" + this.red + \", \" + this.green + \", \" + this.blue + \", \" + this.opacity + \")\";\r\n        },\r\n        toHwbString: function () {\r\n            return \"hwb(\" + this.hue + \", \" + Math.round(this.whiteness * 100) + \"%, \" + Math.round(this.blackness * 100) + \"%)\";\r\n        },\r\n        toHwbStringDecimal: function () {\r\n            return \"hwb(\" + this.hue + \", \" + this.whiteness + \", \" + this.blackness + \")\";\r\n        },\r\n        toHwbaString: function () {\r\n            return \"hwba(\" + this.hue + \", \" + Math.round(this.whiteness * 100) + \"%, \" + Math.round(this.blackness * 100) + \"%, \" + this.opacity + \")\";\r\n        },\r\n        toHslString: function () {\r\n            return \"hsl(\" + this.hue + \", \" + Math.round(this.sat * 100) + \"%, \" + Math.round(this.lightness * 100) + \"%)\";\r\n        },\r\n        toHslStringDecimal: function () {\r\n            return \"hsl(\" + this.hue + \", \" + this.sat + \", \" + this.lightness + \")\";\r\n        },\r\n        toHslaString: function () {\r\n            return \"hsla(\" + this.hue + \", \" + Math.round(this.sat * 100) + \"%, \" + Math.round(this.lightness * 100) + \"%, \" + this.opacity + \")\";\r\n        },\r\n        toCmykString: function () {\r\n            return \"cmyk(\" + Math.round(this.cyan * 100) + \"%, \" + Math.round(this.magenta * 100) + \"%, \" + Math.round(this.yellow * 100) + \"%, \" + Math.round(this.black * 100) + \"%)\";\r\n        },\r\n        toCmykStringDecimal: function () {\r\n            return \"cmyk(\" + this.cyan + \", \" + this.magenta + \", \" + this.yellow + \", \" + this.black + \")\";\r\n        },\r\n        toNcolString: function () {\r\n            return this.ncol + \", \" + Math.round(this.whiteness * 100) + \"%, \" + Math.round(this.blackness * 100) + \"%\";\r\n        },\r\n        toNcolStringDecimal: function () {\r\n            return this.ncol + \", \" + this.whiteness + \", \" + this.blackness;\r\n        },\r\n        toNcolaString: function () {\r\n            return this.ncol + \", \" + Math.round(this.whiteness * 100) + \"%, \" + Math.round(this.blackness * 100) + \"%, \" + this.opacity;\r\n        },\r\n        toName: function () {\r\n            var r, g, b, colorhexs = getColorArr('hexs');\r\n            for (i = 0; i < colorhexs.length; i++) {\r\n                r = parseInt(colorhexs[i].substr(0, 2), 16);\r\n                g = parseInt(colorhexs[i].substr(2, 2), 16);\r\n                b = parseInt(colorhexs[i].substr(4, 2), 16);\r\n                if (this.red == r && this.green == g && this.blue == b) {\r\n                    return getColorArr('names')[i];\r\n                }\r\n            }\r\n            return \"\";\r\n        },\r\n        toHexString: function () {\r\n            var r = toHex(this.red);\r\n            var g = toHex(this.green);\r\n            var b = toHex(this.blue);\r\n            return \"#\" + r + g + b;\r\n        },\r\n        toRgb: function () {\r\n            return { r: this.red, g: this.green, b: this.blue, a: this.opacity };\r\n        },\r\n        toHsl: function () {\r\n            return { h: this.hue, s: this.sat, l: this.lightness, a: this.opacity };\r\n        },\r\n        toHwb: function () {\r\n            return { h: this.hue, w: this.whiteness, b: this.blackness, a: this.opacity };\r\n        },\r\n        toCmyk: function () {\r\n            return { c: this.cyan, m: this.magenta, y: this.yellow, k: this.black, a: this.opacity };\r\n        },\r\n        toNcol: function () {\r\n            return { ncol: this.ncol, w: this.whiteness, b: this.blackness, a: this.opacity };\r\n        },\r\n        isDark: function (n) {\r\n            var m = (n || 128);\r\n            return (((this.red * 299 + this.green * 587 + this.blue * 114) / 1000) < m);\r\n        },\r\n        saturate: function (n) {\r\n            var x, rgb, color;\r\n            x = (n / 100 || 0.1);\r\n            this.sat += x;\r\n            if (this.sat > 1) { this.sat = 1; }\r\n            rgb = hslToRgb(this.hue, this.sat, this.lightness);\r\n            color = colorObject(rgb, this.opacity, this.hue, this.sat);\r\n            this.attachValues(color);\r\n        },\r\n        desaturate: function (n) {\r\n            var x, rgb, color;\r\n            x = (n / 100 || 0.1);\r\n            this.sat -= x;\r\n            if (this.sat < 0) { this.sat = 0; }\r\n            rgb = hslToRgb(this.hue, this.sat, this.lightness);\r\n            color = colorObject(rgb, this.opacity, this.hue, this.sat);\r\n            this.attachValues(color);\r\n        },\r\n        lighter: function (n) {\r\n            var x, rgb, color;\r\n            x = (n / 100 || 0.1);\r\n            this.lightness += x;\r\n            if (this.lightness > 1) { this.lightness = 1; }\r\n            rgb = hslToRgb(this.hue, this.sat, this.lightness);\r\n            color = colorObject(rgb, this.opacity, this.hue, this.sat);\r\n            this.attachValues(color);\r\n        },\r\n        darker: function (n) {\r\n            var x, rgb, color;\r\n            x = (n / 100 || 0.1);\r\n            this.lightness -= x;\r\n            if (this.lightness < 0) { this.lightness = 0; }\r\n            rgb = hslToRgb(this.hue, this.sat, this.lightness);\r\n            color = colorObject(rgb, this.opacity, this.hue, this.sat);\r\n            this.attachValues(color);\r\n        },\r\n        attachValues: function (color) {\r\n            this.red = color.red;\r\n            this.green = color.green;\r\n            this.blue = color.blue;\r\n            this.hue = color.hue;\r\n            this.sat = color.sat;\r\n            this.lightness = color.lightness;\r\n            this.whiteness = color.whiteness;\r\n            this.blackness = color.blackness;\r\n            this.cyan = color.cyan;\r\n            this.magenta = color.magenta;\r\n            this.yellow = color.yellow;\r\n            this.black = color.black;\r\n            this.ncol = color.ncol;\r\n            this.opacity = color.opacity;\r\n            this.valid = color.valid;\r\n        }\r\n    };\r\n    function toColorObject(c) {\r\n        var x, y, typ, arr = [], arrlength, i, opacity, match, a, hue, sat, rgb, colornames = [], colorhexs = [];\r\n        c = w3trim(c.toLowerCase());\r\n        x = c.substr(0, 1).toUpperCase();\r\n        y = c.substr(1);\r\n        a = 1;\r\n        if ((x == \"R\" || x == \"Y\" || x == \"G\" || x == \"C\" || x == \"B\" || x == \"M\" || x == \"W\") && !isNaN(y)) {\r\n            if (c.length == 6 && c.indexOf(\",\") == -1) {\r\n            } else {\r\n                c = \"ncol(\" + c + \")\";\r\n            }\r\n        }\r\n        if (c.length != 3 && c.length != 6 && !isNaN(c)) { c = \"ncol(\" + c + \")\"; }\r\n        if (c.indexOf(\",\") > 0 && c.indexOf(\"(\") == -1) { c = \"ncol(\" + c + \")\"; }\r\n        if (c.substr(0, 3) == \"rgb\" || c.substr(0, 3) == \"hsl\" || c.substr(0, 3) == \"hwb\" || c.substr(0, 4) == \"ncol\" || c.substr(0, 4) == \"cmyk\") {\r\n            if (c.substr(0, 4) == \"ncol\") {\r\n                if (c.split(\",\").length == 4 && c.indexOf(\"ncola\") == -1) {\r\n                    c = c.replace(\"ncol\", \"ncola\");\r\n                }\r\n                typ = \"ncol\";\r\n                c = c.substr(4);\r\n            } else if (c.substr(0, 4) == \"cmyk\") {\r\n                typ = \"cmyk\";\r\n                c = c.substr(4);\r\n            } else {\r\n                typ = c.substr(0, 3);\r\n                c = c.substr(3);\r\n            }\r\n            arrlength = 3;\r\n            opacity = false;\r\n            if (c.substr(0, 1).toLowerCase() == \"a\") {\r\n                arrlength = 4;\r\n                opacity = true;\r\n                c = c.substr(1);\r\n            } else if (typ == \"cmyk\") {\r\n                arrlength = 4;\r\n                if (c.split(\",\").length == 5) {\r\n                    arrlength = 5;\r\n                    opacity = true;\r\n                }\r\n            }\r\n            c = c.replace(\"(\", \"\");\r\n            c = c.replace(\")\", \"\");\r\n            arr = c.split(\",\");\r\n            if (typ == \"rgb\") {\r\n                if (arr.length != arrlength) {\r\n                    return emptyObject();\r\n                }\r\n                for (i = 0; i < arrlength; i++) {\r\n                    if (arr[i] == \"\" || arr[i] == \" \") { arr[i] = \"0\"; }\r\n                    if (arr[i].indexOf(\"%\") > -1) {\r\n                        arr[i] = arr[i].replace(\"%\", \"\");\r\n                        arr[i] = Number(arr[i] / 100);\r\n                        if (i < 3) { arr[i] = Math.round(arr[i] * 255); }\r\n                    }\r\n                    if (isNaN(arr[i])) { return emptyObject(); }\r\n                    if (parseInt(arr[i]) > 255) { arr[i] = 255; }\r\n                    if (i < 3) { arr[i] = parseInt(arr[i]); }\r\n                    if (i == 3 && Number(arr[i]) > 1) { arr[i] = 1; }\r\n                }\r\n                rgb = { r: arr[0], g: arr[1], b: arr[2] };\r\n                if (opacity == true) { a = Number(arr[3]); }\r\n            }\r\n            if (typ == \"hsl\" || typ == \"hwb\" || typ == \"ncol\") {\r\n                while (arr.length < arrlength) { arr.push(\"0\"); }\r\n                if (typ == \"hsl\" || typ == \"hwb\") {\r\n                    if (parseInt(arr[0]) >= 360) { arr[0] = 0; }\r\n                }\r\n                for (i = 1; i < arrlength; i++) {\r\n                    if (arr[i].indexOf(\"%\") > -1) {\r\n                        arr[i] = arr[i].replace(\"%\", \"\");\r\n                        arr[i] = Number(arr[i]);\r\n                        if (isNaN(arr[i])) { return emptyObject(); }\r\n                        arr[i] = arr[i] / 100;\r\n                    } else {\r\n                        arr[i] = Number(arr[i]);\r\n                    }\r\n                    if (Number(arr[i]) > 1) { arr[i] = 1; }\r\n                    if (Number(arr[i]) < 0) { arr[i] = 0; }\r\n                }\r\n                if (typ == \"hsl\") { rgb = hslToRgb(arr[0], arr[1], arr[2]); hue = Number(arr[0]); sat = Number(arr[1]); }\r\n                if (typ == \"hwb\") { rgb = hwbToRgb(arr[0], arr[1], arr[2]); }\r\n                if (typ == \"ncol\") { rgb = ncolToRgb(arr[0], arr[1], arr[2]); }\r\n                if (opacity == true) { a = Number(arr[3]); }\r\n            }\r\n            if (typ == \"cmyk\") {\r\n                while (arr.length < arrlength) { arr.push(\"0\"); }\r\n                for (i = 0; i < arrlength; i++) {\r\n                    if (arr[i].indexOf(\"%\") > -1) {\r\n                        arr[i] = arr[i].replace(\"%\", \"\");\r\n                        arr[i] = Number(arr[i]);\r\n                        if (isNaN(arr[i])) { return emptyObject(); }\r\n                        arr[i] = arr[i] / 100;\r\n                    } else {\r\n                        arr[i] = Number(arr[i]);\r\n                    }\r\n                    if (Number(arr[i]) > 1) { arr[i] = 1; }\r\n                    if (Number(arr[i]) < 0) { arr[i] = 0; }\r\n                }\r\n                rgb = cmykToRgb(arr[0], arr[1], arr[2], arr[3]);\r\n                if (opacity == true) { a = Number(arr[4]); }\r\n            }\r\n        } else if (c.substr(0, 3) == \"ncs\") {\r\n            rgb = ncsToRgb(c);\r\n        } else {\r\n            match = false;\r\n            colornames = getColorArr('names');\r\n            for (i = 0; i < colornames.length; i++) {\r\n                if (c.toLowerCase() == colornames[i].toLowerCase()) {\r\n                    colorhexs = getColorArr('hexs');\r\n                    match = true;\r\n                    rgb = {\r\n                        r: parseInt(colorhexs[i].substr(0, 2), 16),\r\n                        g: parseInt(colorhexs[i].substr(2, 2), 16),\r\n                        b: parseInt(colorhexs[i].substr(4, 2), 16)\r\n                    };\r\n                    break;\r\n                }\r\n            }\r\n            if (match == false) {\r\n                c = c.replace(\"#\", \"\");\r\n                if (c.length == 3) { c = c.substr(0, 1) + c.substr(0, 1) + c.substr(1, 1) + c.substr(1, 1) + c.substr(2, 1) + c.substr(2, 1); }\r\n                for (i = 0; i < c.length; i++) {\r\n                    if (!isHex(c.substr(i, 1))) { return emptyObject(); }\r\n                }\r\n                arr[0] = parseInt(c.substr(0, 2), 16);\r\n                arr[1] = parseInt(c.substr(2, 2), 16);\r\n                arr[2] = parseInt(c.substr(4, 2), 16);\r\n                for (i = 0; i < 3; i++) {\r\n                    if (isNaN(arr[i])) { return emptyObject(); }\r\n                }\r\n                rgb = {\r\n                    r: arr[0],\r\n                    g: arr[1],\r\n                    b: arr[2]\r\n                };\r\n            }\r\n        }\r\n        return colorObject(rgb, a, hue, sat);\r\n    }\r\n    function colorObject(rgb, a, h, s) {\r\n        var hsl, hwb, cmyk, ncol, color, hue, sat;\r\n        if (!rgb) { return emptyObject(); }\r\n        if (a === null) { a = 1; }\r\n        hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);\r\n        hwb = rgbToHwb(rgb.r, rgb.g, rgb.b);\r\n        cmyk = rgbToCmyk(rgb.r, rgb.g, rgb.b);\r\n        hue = (h || hsl.h);\r\n        sat = (s || hsl.s);\r\n        ncol = hueToNcol(hue);\r\n        color = {\r\n            red: rgb.r,\r\n            green: rgb.g,\r\n            blue: rgb.b,\r\n            hue: hue,\r\n            sat: sat,\r\n            lightness: hsl.l,\r\n            whiteness: hwb.w,\r\n            blackness: hwb.b,\r\n            cyan: cmyk.c,\r\n            magenta: cmyk.m,\r\n            yellow: cmyk.y,\r\n            black: cmyk.k,\r\n            ncol: ncol,\r\n            opacity: a,\r\n            valid: true\r\n        };\r\n        color = roundDecimals(color);\r\n        return color;\r\n    }\r\n    function emptyObject() {\r\n        return {\r\n            red: 0,\r\n            green: 0,\r\n            blue: 0,\r\n            hue: 0,\r\n            sat: 0,\r\n            lightness: 0,\r\n            whiteness: 0,\r\n            blackness: 0,\r\n            cyan: 0,\r\n            magenta: 0,\r\n            yellow: 0,\r\n            black: 0,\r\n            ncol: \"R\",\r\n            opacity: 1,\r\n            valid: false\r\n        };\r\n    }\r\n    function getColorArr(x) {\r\n        if (x == \"names\") { return ['AliceBlue', 'AntiqueWhite', 'Aqua', 'Aquamarine', 'Azure', 'Beige', 'Bisque', 'Black', 'BlanchedAlmond', 'Blue', 'BlueViolet', 'Brown', 'BurlyWood', 'CadetBlue', 'Chartreuse', 'Chocolate', 'Coral', 'CornflowerBlue', 'Cornsilk', 'Crimson', 'Cyan', 'DarkBlue', 'DarkCyan', 'DarkGoldenRod', 'DarkGray', 'DarkGrey', 'DarkGreen', 'DarkKhaki', 'DarkMagenta', 'DarkOliveGreen', 'DarkOrange', 'DarkOrchid', 'DarkRed', 'DarkSalmon', 'DarkSeaGreen', 'DarkSlateBlue', 'DarkSlateGray', 'DarkSlateGrey', 'DarkTurquoise', 'DarkViolet', 'DeepPink', 'DeepSkyBlue', 'DimGray', 'DimGrey', 'DodgerBlue', 'FireBrick', 'FloralWhite', 'ForestGreen', 'Fuchsia', 'Gainsboro', 'GhostWhite', 'Gold', 'GoldenRod', 'Gray', 'Grey', 'Green', 'GreenYellow', 'HoneyDew', 'HotPink', 'IndianRed', 'Indigo', 'Ivory', 'Khaki', 'Lavender', 'LavenderBlush', 'LawnGreen', 'LemonChiffon', 'LightBlue', 'LightCoral', 'LightCyan', 'LightGoldenRodYellow', 'LightGray', 'LightGrey', 'LightGreen', 'LightPink', 'LightSalmon', 'LightSeaGreen', 'LightSkyBlue', 'LightSlateGray', 'LightSlateGrey', 'LightSteelBlue', 'LightYellow', 'Lime', 'LimeGreen', 'Linen', 'Magenta', 'Maroon', 'MediumAquaMarine', 'MediumBlue', 'MediumOrchid', 'MediumPurple', 'MediumSeaGreen', 'MediumSlateBlue', 'MediumSpringGreen', 'MediumTurquoise', 'MediumVioletRed', 'MidnightBlue', 'MintCream', 'MistyRose', 'Moccasin', 'NavajoWhite', 'Navy', 'OldLace', 'Olive', 'OliveDrab', 'Orange', 'OrangeRed', 'Orchid', 'PaleGoldenRod', 'PaleGreen', 'PaleTurquoise', 'PaleVioletRed', 'PapayaWhip', 'PeachPuff', 'Peru', 'Pink', 'Plum', 'PowderBlue', 'Purple', 'RebeccaPurple', 'Red', 'RosyBrown', 'RoyalBlue', 'SaddleBrown', 'Salmon', 'SandyBrown', 'SeaGreen', 'SeaShell', 'Sienna', 'Silver', 'SkyBlue', 'SlateBlue', 'SlateGray', 'SlateGrey', 'Snow', 'SpringGreen', 'SteelBlue', 'Tan', 'Teal', 'Thistle', 'Tomato', 'Turquoise', 'Violet', 'Wheat', 'White', 'WhiteSmoke', 'Yellow', 'YellowGreen']; }\r\n        if (x == \"hexs\") { return ['f0f8ff', 'faebd7', '00ffff', '7fffd4', 'f0ffff', 'f5f5dc', 'ffe4c4', '000000', 'ffebcd', '0000ff', '8a2be2', 'a52a2a', 'deb887', '5f9ea0', '7fff00', 'd2691e', 'ff7f50', '6495ed', 'fff8dc', 'dc143c', '00ffff', '00008b', '008b8b', 'b8860b', 'a9a9a9', 'a9a9a9', '006400', 'bdb76b', '8b008b', '556b2f', 'ff8c00', '9932cc', '8b0000', 'e9967a', '8fbc8f', '483d8b', '2f4f4f', '2f4f4f', '00ced1', '9400d3', 'ff1493', '00bfff', '696969', '696969', '1e90ff', 'b22222', 'fffaf0', '228b22', 'ff00ff', 'dcdcdc', 'f8f8ff', 'ffd700', 'daa520', '808080', '808080', '008000', 'adff2f', 'f0fff0', 'ff69b4', 'cd5c5c', '4b0082', 'fffff0', 'f0e68c', 'e6e6fa', 'fff0f5', '7cfc00', 'fffacd', 'add8e6', 'f08080', 'e0ffff', 'fafad2', 'd3d3d3', 'd3d3d3', '90ee90', 'ffb6c1', 'ffa07a', '20b2aa', '87cefa', '778899', '778899', 'b0c4de', 'ffffe0', '00ff00', '32cd32', 'faf0e6', 'ff00ff', '800000', '66cdaa', '0000cd', 'ba55d3', '9370db', '3cb371', '7b68ee', '00fa9a', '48d1cc', 'c71585', '191970', 'f5fffa', 'ffe4e1', 'ffe4b5', 'ffdead', '000080', 'fdf5e6', '808000', '6b8e23', 'ffa500', 'ff4500', 'da70d6', 'eee8aa', '98fb98', 'afeeee', 'db7093', 'ffefd5', 'ffdab9', 'cd853f', 'ffc0cb', 'dda0dd', 'b0e0e6', '800080', '663399', 'ff0000', 'bc8f8f', '4169e1', '8b4513', 'fa8072', 'f4a460', '2e8b57', 'fff5ee', 'a0522d', 'c0c0c0', '87ceeb', '6a5acd', '708090', '708090', 'fffafa', '00ff7f', '4682b4', 'd2b48c', '008080', 'd8bfd8', 'ff6347', '40e0d0', 'ee82ee', 'f5deb3', 'ffffff', 'f5f5f5', 'ffff00', '9acd32']; }\r\n    }\r\n    function roundDecimals(c) {\r\n        c.red = Number(c.red.toFixed(0));\r\n        c.green = Number(c.green.toFixed(0));\r\n        c.blue = Number(c.blue.toFixed(0));\r\n        c.hue = Number(c.hue.toFixed(0));\r\n        c.sat = Number(c.sat.toFixed(2));\r\n        c.lightness = Number(c.lightness.toFixed(2));\r\n        c.whiteness = Number(c.whiteness.toFixed(2));\r\n        c.blackness = Number(c.blackness.toFixed(2));\r\n        c.cyan = Number(c.cyan.toFixed(2));\r\n        c.magenta = Number(c.magenta.toFixed(2));\r\n        c.yellow = Number(c.yellow.toFixed(2));\r\n        c.black = Number(c.black.toFixed(2));\r\n        c.ncol = c.ncol.substr(0, 1) + Math.round(Number(c.ncol.substr(1)));\r\n        c.opacity = Number(c.opacity.toFixed(2));\r\n        return c;\r\n    }\r\n    function hslToRgb(hue, sat, light) {\r\n        var t1, t2, r, g, b;\r\n        hue = hue / 60;\r\n        if (light <= 0.5) {\r\n            t2 = light * (sat + 1);\r\n        } else {\r\n            t2 = light + sat - (light * sat);\r\n        }\r\n        t1 = light * 2 - t2;\r\n        r = hueToRgb(t1, t2, hue + 2) * 255;\r\n        g = hueToRgb(t1, t2, hue) * 255;\r\n        b = hueToRgb(t1, t2, hue - 2) * 255;\r\n        return { r: r, g: g, b: b };\r\n    }\r\n    function hueToRgb(t1, t2, hue) {\r\n        if (hue < 0) hue += 6;\r\n        if (hue >= 6) hue -= 6;\r\n        if (hue < 1) return (t2 - t1) * hue + t1;\r\n        else if (hue < 3) return t2;\r\n        else if (hue < 4) return (t2 - t1) * (4 - hue) + t1;\r\n        else return t1;\r\n    }\r\n    function hwbToRgb(hue, white, black) {\r\n        var i, rgb, rgbArr = [], tot;\r\n        rgb = hslToRgb(hue, 1, 0.50);\r\n        rgbArr[0] = rgb.r / 255;\r\n        rgbArr[1] = rgb.g / 255;\r\n        rgbArr[2] = rgb.b / 255;\r\n        tot = white + black;\r\n        if (tot > 1) {\r\n            white = Number((white / tot).toFixed(2));\r\n            black = Number((black / tot).toFixed(2));\r\n        }\r\n        for (i = 0; i < 3; i++) {\r\n            rgbArr[i] *= (1 - (white) - (black));\r\n            rgbArr[i] += (white);\r\n            rgbArr[i] = Number(rgbArr[i] * 255);\r\n        }\r\n        return { r: rgbArr[0], g: rgbArr[1], b: rgbArr[2] };\r\n    }\r\n    function cmykToRgb(c, m, y, k) {\r\n        var r, g, b;\r\n        r = 255 - ((Math.min(1, c * (1 - k) + k)) * 255);\r\n        g = 255 - ((Math.min(1, m * (1 - k) + k)) * 255);\r\n        b = 255 - ((Math.min(1, y * (1 - k) + k)) * 255);\r\n        return { r: r, g: g, b: b };\r\n    }\r\n    function ncolToRgb(ncol, white, black) {\r\n        var letter, percent, h, w, b;\r\n        h = ncol;\r\n        if (isNaN(ncol.substr(0, 1))) {\r\n            letter = ncol.substr(0, 1).toUpperCase();\r\n            percent = ncol.substr(1);\r\n            if (percent == \"\") { percent = 0; }\r\n            percent = Number(percent);\r\n            if (isNaN(percent)) { return false; }\r\n            if (letter == \"R\") { h = 0 + (percent * 0.6); }\r\n            if (letter == \"Y\") { h = 60 + (percent * 0.6); }\r\n            if (letter == \"G\") { h = 120 + (percent * 0.6); }\r\n            if (letter == \"C\") { h = 180 + (percent * 0.6); }\r\n            if (letter == \"B\") { h = 240 + (percent * 0.6); }\r\n            if (letter == \"M\") { h = 300 + (percent * 0.6); }\r\n            if (letter == \"W\") {\r\n                h = 0;\r\n                white = 1 - (percent / 100);\r\n                black = (percent / 100);\r\n            }\r\n        }\r\n        return hwbToRgb(h, white, black);\r\n    }\r\n    function hueToNcol(hue) {\r\n        while (hue >= 360) {\r\n            hue = hue - 360;\r\n        }\r\n        if (hue < 60) { return \"R\" + (hue / 0.6); }\r\n        if (hue < 120) { return \"Y\" + ((hue - 60) / 0.6); }\r\n        if (hue < 180) { return \"G\" + ((hue - 120) / 0.6); }\r\n        if (hue < 240) { return \"C\" + ((hue - 180) / 0.6); }\r\n        if (hue < 300) { return \"B\" + ((hue - 240) / 0.6); }\r\n        if (hue < 360) { return \"M\" + ((hue - 300) / 0.6); }\r\n    }\r\n    function ncsToRgb(ncs) {\r\n        var black, chroma, bc, percent, black1, chroma1, red1, factor1, blue1, red1, red2, green2, blue2, max, factor2, grey, r, g, b;\r\n        ncs = w3trim(ncs).toUpperCase();\r\n        ncs = ncs.replace(\"(\", \"\");\r\n        ncs = ncs.replace(\")\", \"\");\r\n        ncs = ncs.replace(\"NCS\", \"NCS \");\r\n        ncs = ncs.replace(/  /g, \" \");\r\n        if (ncs.indexOf(\"NCS\") == -1) { ncs = \"NCS \" + ncs; }\r\n        ncs = ncs.match(/^(?:NCS|NCS\\sS)\\s(\\d{2})(\\d{2})-(N|[A-Z])(\\d{2})?([A-Z])?$/);\r\n        if (ncs === null) return false;\r\n        black = parseInt(ncs[1], 10);\r\n        chroma = parseInt(ncs[2], 10);\r\n        bc = ncs[3];\r\n        if (bc != \"N\" && bc != \"Y\" && bc != \"R\" && bc != \"B\" && bc != \"G\") { return false; }\r\n        percent = parseInt(ncs[4], 10) || 0;\r\n        if (bc !== 'N') {\r\n            black1 = (1.05 * black - 5.25);\r\n            chroma1 = chroma;\r\n            if (bc === 'Y' && percent <= 60) {\r\n                red1 = 1;\r\n            } else if ((bc === 'Y' && percent > 60) || (bc === 'R' && percent <= 80)) {\r\n                if (bc === 'Y') {\r\n                    factor1 = percent - 60;\r\n                } else {\r\n                    factor1 = percent + 40;\r\n                }\r\n                red1 = ((Math.sqrt(14884 - Math.pow(factor1, 2))) - 22) / 100;\r\n            } else if ((bc === 'R' && percent > 80) || (bc === 'B')) {\r\n                red1 = 0;\r\n            } else if (bc === 'G') {\r\n                factor1 = (percent - 170);\r\n                red1 = ((Math.sqrt(33800 - Math.pow(factor1, 2))) - 70) / 100;\r\n            }\r\n            if (bc === 'Y' && percent <= 80) {\r\n                blue1 = 0;\r\n            } else if ((bc === 'Y' && percent > 80) || (bc === 'R' && percent <= 60)) {\r\n                if (bc === 'Y') {\r\n                    factor1 = (percent - 80) + 20.5;\r\n                } else {\r\n                    factor1 = (percent + 20) + 20.5;\r\n                }\r\n                blue1 = (104 - (Math.sqrt(11236 - Math.pow(factor1, 2)))) / 100;\r\n            } else if ((bc === 'R' && percent > 60) || (bc === 'B' && percent <= 80)) {\r\n                if (bc === 'R') {\r\n                    factor1 = (percent - 60) - 60;\r\n                } else {\r\n                    factor1 = (percent + 40) - 60;\r\n                }\r\n                blue1 = ((Math.sqrt(10000 - Math.pow(factor1, 2))) - 10) / 100;\r\n            } else if ((bc === 'B' && percent > 80) || (bc === 'G' && percent <= 40)) {\r\n                if (bc === 'B') {\r\n                    factor1 = (percent - 80) - 131;\r\n                } else {\r\n                    factor1 = (percent + 20) - 131;\r\n                }\r\n                blue1 = (122 - (Math.sqrt(19881 - Math.pow(factor1, 2)))) / 100;\r\n            } else if (bc === 'G' && percent > 40) {\r\n                blue1 = 0;\r\n            }\r\n            if (bc === 'Y') {\r\n                green1 = (85 - 17 / 20 * percent) / 100;\r\n            } else if (bc === 'R' && percent <= 60) {\r\n                green1 = 0;\r\n            } else if (bc === 'R' && percent > 60) {\r\n                factor1 = (percent - 60) + 35;\r\n                green1 = (67.5 - (Math.sqrt(5776 - Math.pow(factor1, 2)))) / 100;\r\n            } else if (bc === 'B' && percent <= 60) {\r\n                factor1 = (1 * percent - 68.5);\r\n                green1 = (6.5 + (Math.sqrt(7044.5 - Math.pow(factor1, 2)))) / 100;\r\n            } else if ((bc === 'B' && percent > 60) || (bc === 'G' && percent <= 60)) {\r\n                green1 = 0.9;\r\n            } else if (bc === 'G' && percent > 60) {\r\n                factor1 = (percent - 60);\r\n                green1 = (90 - (1 / 8 * factor1)) / 100;\r\n            }\r\n            factor1 = (red1 + green1 + blue1) / 3;\r\n            red2 = ((factor1 - red1) * (100 - chroma1) / 100) + red1;\r\n            green2 = ((factor1 - green1) * (100 - chroma1) / 100) + green1;\r\n            blue2 = ((factor1 - blue1) * (100 - chroma1) / 100) + blue1;\r\n            if (red2 > green2 && red2 > blue2) {\r\n                max = red2;\r\n            } else if (green2 > red2 && green2 > blue2) {\r\n                max = green2;\r\n            } else if (blue2 > red2 && blue2 > green2) {\r\n                max = blue2;\r\n            } else {\r\n                max = (red2 + green2 + blue2) / 3;\r\n            }\r\n            factor2 = 1 / max;\r\n            r = parseInt((red2 * factor2 * (100 - black1) / 100) * 255, 10);\r\n            g = parseInt((green2 * factor2 * (100 - black1) / 100) * 255, 10);\r\n            b = parseInt((blue2 * factor2 * (100 - black1) / 100) * 255, 10);\r\n            if (r > 255) { r = 255; }\r\n            if (g > 255) { g = 255; }\r\n            if (b > 255) { b = 255; }\r\n            if (r < 0) { r = 0; }\r\n            if (g < 0) { g = 0; }\r\n            if (b < 0) { b = 0; }\r\n        } else {\r\n            grey = parseInt((1 - black / 100) * 255, 10);\r\n            if (grey > 255) { grey = 255; }\r\n            if (grey < 0) { grey = 0; }\r\n            r = grey;\r\n            g = grey;\r\n            b = grey;\r\n        }\r\n        return {\r\n            r: r,\r\n            g: g,\r\n            b: b\r\n        };\r\n    }\r\n    function rgbToHsl(r, g, b) {\r\n        var min, max, i, l, s, maxcolor, h, rgb = [];\r\n        rgb[0] = r / 255;\r\n        rgb[1] = g / 255;\r\n        rgb[2] = b / 255;\r\n        min = rgb[0];\r\n        max = rgb[0];\r\n        maxcolor = 0;\r\n        for (i = 0; i < rgb.length - 1; i++) {\r\n            if (rgb[i + 1] <= min) { min = rgb[i + 1]; }\r\n            if (rgb[i + 1] >= max) { max = rgb[i + 1]; maxcolor = i + 1; }\r\n        }\r\n        if (maxcolor == 0) {\r\n            h = (rgb[1] - rgb[2]) / (max - min);\r\n        }\r\n        if (maxcolor == 1) {\r\n            h = 2 + (rgb[2] - rgb[0]) / (max - min);\r\n        }\r\n        if (maxcolor == 2) {\r\n            h = 4 + (rgb[0] - rgb[1]) / (max - min);\r\n        }\r\n        if (isNaN(h)) { h = 0; }\r\n        h = h * 60;\r\n        if (h < 0) { h = h + 360; }\r\n        l = (min + max) / 2;\r\n        if (min == max) {\r\n            s = 0;\r\n        } else {\r\n            if (l < 0.5) {\r\n                s = (max - min) / (max + min);\r\n            } else {\r\n                s = (max - min) / (2 - max - min);\r\n            }\r\n        }\r\n        s = s;\r\n        return { h: h, s: s, l: l };\r\n    }\r\n    function rgbToHwb(r, g, b) {\r\n        var h, w, bl;\r\n        r = r / 255;\r\n        g = g / 255;\r\n        b = b / 255;\r\n        let max = Math.max(r, g, b);\r\n        let min = Math.min(r, g, b);\r\n        let chroma = max - min;\r\n        if (chroma == 0) {\r\n            h = 0;\r\n        } else if (r == max) {\r\n            h = (((g - b) / chroma) % 6) * 360;\r\n        } else if (g == max) {\r\n            h = ((((b - r) / chroma) + 2) % 6) * 360;\r\n        } else {\r\n            h = ((((r - g) / chroma) + 4) % 6) * 360;\r\n        }\r\n        w = min;\r\n        bl = 1 - max;\r\n        return { h: h, w: w, b: bl };\r\n    }\r\n    function rgbToCmyk(r, g, b) {\r\n        var c, m, y, k;\r\n        r = r / 255;\r\n        g = g / 255;\r\n        b = b / 255;\r\n        let max = Math.max(r, g, b);\r\n        k = 1 - max;\r\n        if (k == 1) {\r\n            c = 0;\r\n            m = 0;\r\n            y = 0;\r\n        } else {\r\n            c = (1 - r - k) / (1 - k);\r\n            m = (1 - g - k) / (1 - k);\r\n            y = (1 - b - k) / (1 - k);\r\n        }\r\n        return { c: c, m: m, y: y, k: k };\r\n    }\r\n    function toHex(n) {\r\n        var hex = n.toString(16);\r\n        while (hex.length < 2) { hex = \"0\" + hex; }\r\n        return hex;\r\n    }\r\n    function cl(x) {\r\n        console.log(x);\r\n    }\r\n    function w3trim(x) {\r\n        return x.replace(/^\\s+|\\s+$/g, '');\r\n    }\r\n    function isHex(x) {\r\n        return ('0123456789ABCDEFabcdef'.indexOf(x) > -1);\r\n    }\r\n    window.w3color = w3color;\r\n\r\n})();\r\n\r\nfunction w3SetColorsByAttribute() {\r\n    var z, i, att;\r\n    z = document.getElementsByTagName(\"*\");\r\n    for (i = 0; i < z.length; i++) {\r\n        att = z[i].getAttribute(\"data-w3-color\");\r\n        if (att) {\r\n            z[i].style.backgroundColor = w3color(att).toRgbString();\r\n        }\r\n    }\r\n}\r\n\r\nexport default w3color","import React from 'react'\n\nimport StarSky from 'react-star-sky'\n\nconst App = () => {\n  return (\n    <div className='app-wrapper'>\n      <StarSky\n        debugFPS={true}\n        pageBackground={true}\n        // starColor='white'\n        frameRate={60}\n      />\n\n      <StarSky\n        debugFPS={false}\n        pageBackground={false}\n        starColor={[0, 0, 255]}\n        backgroundColor={[0, 0, 20]}\n        style={{\n          width: '300px',\n          height: '300px',\n          margin: '0 auto',\n          marginTop: '100px',\n          border: '1px solid grey',\n          borderRadius: '10px',\n          padding: '5px'\n        }}\n      >\n        <h2>Example Star Skies</h2>\n        You can easily place objects in front of the star sky. The star sky wrapper simply acts as div in which the canvas is contained as a background.<br />\n        For full documentation, see the readme on github.\n      </StarSky>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}